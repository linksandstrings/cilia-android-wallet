/**
 * Auth API
 * Auth API<br> <a href='/changelog'>Changelog</a>
 *
 * The version of the OpenAPI document: v0.0.50
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.mycelium.bequant.remote.client.apis

import com.mycelium.bequant.remote.client.createApi
import com.mycelium.bequant.remote.client.models.AccountAuthResponse
import com.mycelium.bequant.remote.client.models.SessionJWT
import com.mycelium.bequant.remote.client.models.SessionResponse
import com.mycelium.bequant.remote.client.models.SessionTotpValidateRequest
import retrofit2.Response
import retrofit2.http.Body
import retrofit2.http.POST

interface SessionApi {

    /**
     * Generate new access token and fresh session
     * Generate new access token and fresh session
     * Responses:
     *  - 200: OK
     *  - 401: Api key is missing or invalid
     *  - 403: Api key is missing or invalid
     *  - 420: Session issues
     *  - 421: Token expired
     *  - 0: error
     *
     * @param sessionJWT
     * @return SessionResponse
     */
    @POST("session/access_token/refresh")

    suspend fun postSessionAccessTokenRefresh(
            @Body sessionJWT: SessionJWT
    ): Response<SessionResponse>

    /**
     * Session revoke
     * Session revoke
     * Responses:
     *  - 200: OK
     *  - 401: Api key is missing or invalid
     *  - 403: Api key is missing or invalid
     *  - 0: error
     *
     * @param sessionJWT
     * @return void
     */
    @POST("session/revoke")

    suspend fun postSessionRevoke(
            @Body sessionJWT: SessionJWT
    ): Response<Unit>

    /**
     * Session TOTP validate
     * Session TOTP validate
     * Responses:
     *  - 200: OK
     *  - 401: Api key is missing or invalid
     *  - 403: Api key is missing or invalid
     *  - 420: Session issues
     *  - 421: Token expired
     *  - 0: error
     *
     * @param sessionTotpValidateRequest
     * @return AccountAuthResponse
     */
    @POST("session/totp/validate")

    suspend fun postSessionTotpValidate(
            @Body sessionTotpValidateRequest: SessionTotpValidateRequest
    ): Response<AccountAuthResponse>


    companion object {
        fun create(): SessionApi = createApi()
    }
}
